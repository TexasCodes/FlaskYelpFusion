from flask import Flask
import os
import argparse
import json
import pprint
import requests
import sys
import urllib
import urllib.parse
import http.client

app = Flask(__name__)

try:
    # For Python 3.0 and later
    from urllib.error import HTTPError
    from urllib.parse import quote
    from urllib.parse import urlencode
except ImportError:
    # Fall back to Python 2's urllib2 and urllib
    from urllib2 import HTTPError
    from urllib import quote
    from urllib import urlencode
api_key = os.environ.get('API_KEY_YELP')

# API constants, you shouldn't have to change these.
API_HOST = 'api.yelp.com'
SEARCH_PATH = '/v3/businesses/search'
BUSINESS_PATH1 = '/v3/businesses/'  # Business ID will come after slash.
CATEGORY_PATH = '/v3/categories'

 # Defaults for our simple example.
json_key = "data"

headers = {
'Authorization': 'Bearer %s' % api_key,
}

@app.route('/get_search')
def get_search():
#need the following parameters (type dict) 
	params = {'name':'coffee', 
				'address1':'11005 Burnet Rd', 
				'coordinates': {'latitude': 30.39442, 'longitude': -97.72019}, 
				'city':'Austin', 
				'state':'TX', 
				'country':'US', 
				'radius': 1, 'limit': 10}


	param_string = urllib.parse.urlencode(params)
	conn = http.client.HTTPSConnection(API_HOST)
	conn.request("GET", "/v3/businesses/matches/best?"+param_string, headers=headers)

	res = conn.getresponse()
	data = res.read()
	data = json.loads(data.decode("utf-8"))

	b_id = data['businesses'][0]['id']

	r_url = BUSINESS_PATH1 + b_id #+ "/reviews"    #review request URL creation based on business ID
	conn.request("GET",r_url,headers=headers)
	rev_res = conn.getresponse()     #response and read functions needed else error(?)
	rev_data = rev_res.read()
	yelp_reviews = json.loads(rev_data.decode("utf-8"))	
	yelp_id = yelp_reviews['id']
	yelp_name = yelp_reviews['name']
	yelp_coords = yelp_reviews['coordinates']

	yelp_dump = json.dumps(	
		[json_key, 
		{
		'id': yelp_id, 
		'name': yelp_name, 
		'coordinates': yelp_coords}
		], 
		sort_keys=False, indent=4, separators=(': ', ': ')		
		)

	return yelp_dump


@app.route('/get_businessDetails')
def get_businessDetails():
	business_id = 'wP5mU6WLU5y6NVLm1NpPBA'
	business_path = BUSINESS_PATH1 + business_id
	url = 'https://' + API_HOST + business_path	
	headers = {'Authorization': 'Bearer %s' % api_key,}

	response = requests.get(url, headers=headers)
	response_load = response.json()
	response_dump = json.dumps(	[json_key,	
		{'': response_load}],
		sort_keys=False, indent=4, separators=(': ', ': ')	
		)

	return response_dump

@app.route('/get_categories')
def get_categories():	
	url = 'https://' + API_HOST + CATEGORY_PATH
	headers = {'Authorization': 'Bearer %s' % api_key,}
	url_params = {
	"data": [],
    "country": "US",     
    }

	data = []

	response = requests.get(url, headers=headers, params=url_params)
	response_json = response.json()

	response_dump = json.dumps(response_json)
	response_load = json.loads(response_dump)

	for p in response_load['categories']: data.append(p['alias'])

	alias_str = ', '.join(data)
	response_format = json.dumps ( [json_key, 
		{alias_str: alias_str}],
		separators=(', ', ', '))

	return response_format

@app.route('/')
def index():
	
 	return get_search()
	
if __name__ == "__main__":
 	app.run(debug=True)
